---
- name: Tomcat installation
  hosts: appserver
  become: yes
  tasks:
    - name: Installing Java 
      ansible.builtin.package:
        name: "{{java_package_name}}"
        state: present
    - name: create a group
      ansible.builtin.group:
        name: "{{group_name}}"
        state: present
    - name: Creating a System User
      ansible.builtin.user:
        name: "{{user_name}}"
        group: "{{group_name}}"
        create_home: true 
        home: "{{user_home}}"
        shell: "{{user_shell}}"
        state: present
    - name: get tomcat stats
      ansible.builtin.stat:
        path: "{{user_home}}/latest/bin/startup.sh"
      register: tomcat_startup
    - name: extract tomcat
      ansible.builtin.unarchive: 
        src: "https://www-eu.apache.org/dist/tomcat/tomcat-{{tomcat_major_version}}/v{{tomcat_version}}/bin/apache-tomcat-{{tomcat_version}}.tar.gz"
        dest: "{{user_home}}"
        remote_src: yes
      when: not tomcat_startup.stat.exists 
    - name: create a symbolic link
      ansible.builtin.file:
        src: "{{user_home}}/apache-tomcat-{{tomcat_version}}"
        dest: "{{user_home}}/latest"
        owner: "{{user_name}}"
        group: "{{group_name}}"
        state: link
    - name: change permissions
      ansible.builtin.file:
        dest: "{{user_home}}"
        state: directory
        recurse: yes
        owner: "{{user_name}}"
        group: "{{group_name}}"
    - name: add executive permissions to shell files
      ansible.builtin.command: "sudo sh -c 'chmod +x {{user_home}}/latest/bin/*.sh'" 
      when: not tomcat_startup.stat.exists    
    - name: Creating SystemD Unit File in ubuntu
      ansible.builtin.copy:
        src: ubuntu.tomcat.service
        dest: "/etc/systemd/system/{{tomcat_service_name}}"
        owner: "{{user_name}}"
        group: "{{group_name}}"  
      when: ansible_facts['distribution'] == "Ubuntu"  
    - name: reload daemon and start Tomcat 
      ansible.builtin.systemd:
        name: "{{tomcat_service_name}}"
        daemon_reload: true
        enabled: true
        state: started  
    - name: create tomcat users xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{user_home}}/latest/conf/tomcat-users.xml"
        owner: "{{user_name}}"
        group: "{{group_name}}"
    - name: create tomcat context xml
      ansible.builtin.copy:
        src: context.xml
        dest: "{{user_home}}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{user_name}}"
        group: "{{group_name}}"
    - name: create tomcat host manager context xml
      ansible.builtin.copy:
        src: host-manager.context.xml
        dest: "{{user_home}}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{user_name}}"
        group: "{{group_name}}"    
    - name: restart tomcat
      ansible.builtin.systemd:
        name: "{{tomcat_service_name}}"
        state: restarted
    