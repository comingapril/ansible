---
- name: Installtion of Tomcat on ubuntu machine
  hosts: appservers
  become: yes
  tasks: 
    - name: Installing Java
      ansible.builtin.package:
        name: "{{java_package_name}}"
        state: present
    - name: Creating a group
      ansible.builtin.group:
        name: "{{group_name}}"
        state: present
    - name: Creating a System User
      ansible.builtin.user:
        name: "{{user_name}}"
        create_home: true
        group: "{{group_name}}"
        home: "{{user_home}}"
        shell: "{{user_shell}}"
        state: present          
    - name: get tomcat stats 
      ansible.builtin.stat:
        path: "{{user_home}}/latest/bin/startup.sh"       
      register: tomcat_startup     
    - name: extract tomcat
      ansible.builtin.unarchive:
        src: "https://www-eu.apache.org/dist/tomcat/tomcat-{{tomcat_major_version}}/v{{tomcat_version}}/bin/apache-tomcat-{{tomcat_version}}.tar.gz"
        dest: "{{user_home}}"
        remote_src: yes
      when: not tomcat_startup.stat.exists 
    - name: Create a symbolic link
      ansible.builtin.file:
        src:  "{{user_home}}/apache-tomcat-{{tomcat_version}}"
        dest: "{{user_home}}/latest"
        owner: "{{user_name}}"
        group: "{{group_name}}"
        state: link  
      notify: 
        - Change permissions
        - adding executible permissions to shell files
    - name: Creating SystemD Unit File in ubuntu
      ansible.builtin.copy:
        src: ubuntu.tomcat.service
        dest: /etc/systemd/system/tomcat.service_name
        owner: "{{user_name}}"
        group: "{{group_name}}"   
      notify:
        - enable and reload tomcat  
    - name: copy users sml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{user_home}}/latest/conf/tomcat-users.xml"
        owner: "{{user_name}}"
        group: "{{group_name}}"
      notify:
          - restart tomcat  
    - name: copy context xml
      ansible.builtin.copy:
        src: context.xml
        dest: "{{user_home}}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{user_name}}"
        group: "{{group_name}}"
      notify:
          - restart tomcat  
    - name: copy host manager context xml
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: "{{user_home}}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{user_name}}"
        group: "{{group_name}}"
      notify:
        - restart tomcat
    - name: ensure tomcat is running
      ansible.builtin.systemd:
        name: "{{tomcat_service_name}}"
        state: started      
  handlers:
    - name: restart tomcat
      ansible.builtin.systemd:
        name: "{{tomcat_service_name}}"
        state: restarted 
    - name: enable and reload tomcat
      ansible.builtin.systemd:
        name: "{{tomcat_service_name}}"
        state: restarted    
    - name: adding executible permissions to shell files
      ansible.builtin.command: "sudo sh -c 'chmod +x {{user_home}}/latest/bin/*.sh'"  
    - name: Change permissions
      ansible.builtin.file:
        dest: "{{user_home}}"
        recurse: yes
        owner: "{{user_name}}"
        group: "{{group_name}}"
        state: directory   